name: Auto-versioning
permissions: write-all

# Controls when the workflow will run
on:

  # On every code push
  push:
    branches:
      - develop
  
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    branches:
      - main
    types:
      - closed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-version:
    name: Create a new version and release

    # Condition for the runner
    # if: github.event.pull_request.merged == true

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0 #.10.2
        with:
          versionSpec: '6.x'

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0 #.10.2
        with:
          useConfigFile: true

      - name: Update version file
        id: setversion-dev
        if: github.ref == 'refs/heads/main'
        run: |
            echo "Updating version file to ${{ steps.gitversion.outputs.semVer }}..."
            git config user.email "no-reply@github.com"
            git config user.name "Release Bot"
            echo "${{ steps.gitversion.outputs.semVer }}"> .version
            git add .version
            git commit -m "Updated version file to ${{ steps.gitversion.outputs.semVer }}"
            git push origin

      - name: Update version file
        id: setversion-prod
        if: github.ref == 'refs/heads/develop'
        run: |
            echo "Updating version file to ${{ steps.gitversion.outputs.semVer }}..."
            git config user.email "no-reply@github.com"
            git config user.name "Release Bot"
            if: github.ref == 'refs/heads/master'
            echo "${{ steps.gitversion.outputs.FullSemVer }}+${{ steps.gitversion.outputs.ShortSha }}"> .version
            git add .version
            git commit -m "Updated version file to ${{ steps.gitversion.outputs.FullSemVer }}"
            git push origin

      - name: Create Release
        if: github.ref == 'refs/heads/main'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        run: |
          gh release create ${{ steps.gitversion.outputs.semVer }} \
            --title=${{ steps.gitversion.outputs.semVer }} \
            --notes="Build: ${{ steps.gitversion.outputs.FullSemVer }}+${{ steps.gitversion.outputs.ShortSha }}" \
            --latest=true \
            --generate-notes
